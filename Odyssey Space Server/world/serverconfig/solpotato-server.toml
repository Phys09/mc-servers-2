
[Benefits]
	# A list of diversity value thresholds, in ascending order. When the player's food diversity reaches a threshold,
	# they will get the benefits associated with that threshold.
	#
	#
	thresholds = [3.0, 5.0, 7.0, 10.0, 13.0, 18.0, 25.0, 31.0]
	# 
	# Define custom benefits here. Each entry in the list corresponds to a benefit that will be obtained
	# at the corresponding diversity threshold defined the list above. For example, the first entry in
	# this list will be applied when the player's food diversity reaches the number in the first entry in
	# the threshold list above.
	# Each benefit is a string with the following form: [type],[registry name],[value] (without the brackets)
	# The type can either be 'attribute' for attribute modifiers or 'effect' for potion effects
	# Registry names for common vanila attributes are 
	# generic.max_health, generic.knockback_resistance, generic.movement_speed, generic.luck, 
	# generic.attack_damage, generic.attack_speed, generic.armor, generic.armor_toughness 
	# The value of attributes is the numerical number that will be added to that attribute
	# Use a negative number for subtraction. Multiplicative modifiers are not supported.
	# For potion effects, the value is an integer and is the potion effect amplifier. Note
	# that the amplifier is 0 indexed, so minecraft:strength,1 corresponds to Strength II
	#
	# To add multiple benefits to the same threshold, separate them by a semicolon ';'
	# Make sure that you have NO SPACES!
	# As an example, 'attribute,generic.max_health,2;effect,strength,1' will give both +2 max hp
	# and Strength II at the corresponding threshold.
	#
	#
	benefitsUnparsed = ["attribute,generic.max_health,1", "attribute,generic.max_health,1", "attribute,generic.max_health,2", "attribute,generic.max_health,2;effect,strength,0", "attribute,generic.max_health,2;effect,regeneration,0", "attribute,generic.max_health,2;effect,speed,0", "attribute,generic.max_health,4", "attribute,generic.max_health,6;effect,regeneration,1"]
	# The minimum number of foods a player needs to eat before any benefits are applied.
	#
	#
	#Range: 0 ~ 1000
	minFoodsToActivate = 0

[Filtering]
	# Foods in this list won't contribute to food diversity.
	#
	#
	blacklist = []
	#
	# When this list contains anything, the blacklist is ignored and instead only foods from here count.
	#
	#
	whitelist = []

[Miscellaneous]
	#
	# How many foods should be tracked. I.e., how many food items eaten in the past should count toward food diversity.
	# Note that the larger this is, the higher your potential diversity value can be, so keep this mind
	# if you are defining custom thresholds/benefits above.
	# !!!If you update queueSize, and leave the other advanced options unchanged,
	# make sure you change endDecay (below) to match queueSize, or else nothing will change!!!
	#
	#
	#Range: 1 ~ 1000
	queueSize = 32
	#
	# If true, eating foods outside of survival mode (e.g. creative/adventure) is not tracked.
	#
	#
	limitProgressionToSurvival = false
	# Whether or not to reset food diversity on death, effectively losing all benefits.
	#
	#
	resetOnDeath = true

[Advanced]
	#
	# How many meals in the past should the diversity time penalty start to apply.
	# **Needs to be less than queueSize and less than or equal to endDecay!!!**
	#
	#
	#Range: 0 ~ 1000
	startDecay = 0
	#
	# Whether blacklisted foods should still take a spot in the queue, even if they don't contribute any diversity.
	#
	#
	shouldForbiddenCount = true
	#
	# The default diversity value when you eat a food. There is little reason to ever change this.
	#
	#
	#Range: 0.0 ~ 100.0
	defaultContribution = 1.0
	#
	# How many meals in the past should the diversity penalty stop from.
	# **Needs to be less than queueSize and greater than startDecay!!!**
	# Note that if you update queueSize, to retain the default behavior, you need to also
	# set endDecay equal to the queueSize
	#
	#
	#Range: 0 ~ 1000
	endDecay = 32
	# These config options all affect the technical details of how diversity is calculated.
	# Please look at the explanation on the wiki on the github to see how these values work.
	#
	# Lowest possible diversity contribution a food can give. This is a multiplier, not an
	# absolute value!
	#
	#
	#Range: 0.0 ~ 1.0
	minContribution = 0.0

[Complexity]
	# Define custom complexity values for individual foods here.
	# The complexity value of a food is how much diversity points it gives. 
	# The base diversity value of foods not defined here is equal to defaultContribution.
	# Each entry in the list should be a string defining one food, and the format is [registry name],[value]
	# Note that tags are NOT currently supported.
	#
	#
	complexityUnparsed = ["minecraft:golden_carrot,2", "minecraft:golden_carrot,2", "minecraft:enchanted_golden_apple,5", "futurepack:salad,1.5", "farmersdelight:sweet_berry_cookie,1.2", "minecraft:cookie,1.2", "farmersdelight:honey_cookie,1.2", "farmersdelight:sweet_berry_cheesecake_slice,1.6", "farmersdelight:apple_pie_slice,2", "farmersdelight:cake_slice,3", "farmersdelight:chocolate_pie_slice,1.6", "farmersdelight:fruit_salad,3", "farmersdelight:melon_popsicle,1.3", "futurepack:ersebrot,1.4", "farmersdelight:barbecue_stick,3.3", "farmersdelight:mixed_salad,2.2", "farmersdelight:chicken_sandwich,4", "farmersdelight:hamburger,4.5", "farmersdelight:bacon_sandwich,4", "farmersdelight:cabbage_rolls,2", "farmersdelight:egg_sandwich,2", "farmersdelight:dumplings,4", "farmersdelight:mutton_wrap,4.7", "farmersdelight:stuffed_potato,4", "farmersdelight:beef_stew,3", "farmersdelight:chicken_soup,3.3", "farmersdelight:vegetable_soup,2.3", "farmersdelight:fish_stew,3", "farmersdelight:fried_rice,4", "farmersdelight:pumpkin_soup,4", "farmersdelight:baked_cod_stew,4", "farmersdelight:noodle_soup,4", "farmersdelight:pasta_with_meatballs,3.4", "farmersdelight:pasta_with_mutton_chop,3.4", "farmersdelight:roasted_mutton_chops,4", "farmersdelight:vegetable_noodles,2", "farmersdelight:steak_and_potatoes,4.2", "farmersdelight:ratatouille,2.4", "farmersdelight:squid_ink_pasta,4", "farmersdelight:grilled_salmon,4", "farmersdelight:roast_chicken,6", "farmersdelight:stuffed_pumpkin,6", "farmersdelight:honey_glazed_ham,3.5", "farmersdelight:shepherds_pie,4.5", "kubejs:carabeef_stew,3", "kubejs:spicy_scale_soup,3", "kubejs:tail_and_tongue,4", "kubejs:scalefruit_soup,1.3", "kubejs:spear_monk_stew,3", "kubejs:kickin_charscale_stew,4", "kubejs:crescent_salmon,4", "kubejs:brewberry_popsicle,1.6", "futurepack:astrofood3,3", "futurepack:astrofood1,4", "futurepack:astrofood4,5", "futurepack:astrofood2,7"]

